{"version":3,"sources":["logo.svg","assets/img/ava.png","helpers/offset.js","App.jsx","components/indexPage/indexPage.jsx","components/aboutPage/aboutPage.jsx","components/contactPage/contactPage.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","offsetPosition","element","offsetLeft","offsetTop","offsetParent","RouteWithSubRoutes","route","exact","path","react_default","a","createElement","Switch","Route","render","props","component","Object","assign","routes","className","src","require","href","MyRouter","Router","App","setPositionSlides","$this","assertThisInitialized","_this","document","querySelectorAll","forEach","item","leftPosition","offset","$","eq","index","click","e","changeSlide","left","setTimeout","querySelector","style","concat","this","window","location","pathname","App_MyRouter","Link","to","map","App_RouteWithSubRoutes","key","Component","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.999c46af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/ava.4db5bbe6.png\";","export default function offsetPosition(element) {\n    let offsetLeft = 0,\n        offsetTop = 0;\n    do {\n        offsetLeft += element.offsetLeft;\n        offsetTop += element.offsetTop;\n    } while (element = element.offsetParent);\n    return [offsetLeft, offsetTop];\n}\n","import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './assets/styles/App.scss'\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport offset from './helpers/offset'\nimport $ from 'jquery'\nimport IndexPage from './components/indexPage/indexPage'\nimport AboutPage from './components/aboutPage/aboutPage'\nimport ContactPage from './components/contactPage/contactPage'\nconst RouteWithSubRoutes = (route) => {\n  const exact = route.path === '/' ? true : false\n  return (\n    <Switch>\n      <Route path={route.path} exact={exact} render={(props) => (\n        <route.component {...props} routes={route.routes} />\n      )} />\n      <Route path={'*'} render={(props) => (\n        <div className='container'></div>\n      )} />\n    </Switch>\n  )\n}\n\n\nconst routes = [\n  {\n    path: '/',\n    component: IndexPage\n  },\n  {\n    path: '/about',\n    component: AboutPage\n  },\n  {\n    path: '/contact',\n    component: ContactPage\n  }\n]\nclass MyRouter extends Router {\n\n}\n\nclass App extends Component {\n  componentDidMount() {\n    this.setPositionSlides()\n    const $this = this\n    setTimeout(() => {\n      if (window.location.pathname !== '/') {\n        document.querySelectorAll('.container.current').forEach(function (item) {\n          const leftPosition = offset(item)[0]\n          $this.changeSlide(leftPosition)\n        })\n      }\n    })\n  }\n  setPositionSlides = () => {\n    const $this = this;\n    document.querySelectorAll('.container').forEach(function (item) {\n      const leftPosition = offset(item)[0]\n      $('nav a').eq($(item).index()).click(function (e) {\n        $this.changeSlide(leftPosition)\n      })\n    })\n  }\n  changeSlide = (left) => {\n    setTimeout(() => {\n      const containers = document.querySelector('.containers');\n      containers.style.left = `-${left}px`\n    })\n  }\n  render() {\n    return (\n      <MyRouter>\n        <div className='App'>\n          <header className='header'>\n            <nav>\n              <Link to='/'>Главная</Link>\n              <Link to='/about'>Обо мне</Link>\n              <Link to='/contact'>Контакты</Link>\n            </nav>\n          </header>\n          <main>\n            <div className='containers'>\n              {routes.map((route) => (\n                <RouteWithSubRoutes key={route.path} {...route} />\n              ))}\n            </div>\n          </main>\n        </div>\n      </MyRouter>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\n\nexport default function IndexPage(props) {\n    return <div className='container current'>\n        <h1>Аюпов Азат<br></br>персональная страница</h1>\n    </div>\n}","import React from 'react'\n\nexport default function AboutPage(props) {\n    return <div className='container current'>\n        <div className='slide'>\n            <div className='person'>\n                <div className='person__left-side'>\n                    <div className='img-container'>\n                        <img src={require('../../assets/img/ava.png')} />\n                    </div>\n                </div>\n                <div className='person__right-side'>\n                    <div className='about-me'>\n                        <h2>Обо мне:</h2>\n                        <div className='about-me__description'>\n                            Меня зовут Азат 27 лет, проживаю в городе Копейск. Верстаю на работе, учусь фронтенду дома. Люблю смотреть ютуб, играю в CS:GO. Гуляю по выходным с друзьями. В будни по вечерам стараюсь ходить в мечеть.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className='slide'>\n            <div className='edu'>\n                <div className='edu__left-side'>\n                    <div className='edu__title'>Образование</div>\n                </div>\n                <div className='edu__right-side'>\n                    <ul>\n                        <li>\n                            <div>Челябинский Государственный Университет</div>\n                            <div>Фундаментальная информатика и информационные технологии <span>•</span> 2012-2016г.</div>\n                            <div>Форма обучения дистанционная, на данный момент не учусь, однако образование не закончил, т.к. не завершил самую последнюю и важную стадию, не делал выпускную квалификационную работу.</div>\n                        </li>\n                        <li>\n                            <div>Челябинский промышленно-гуманитарный техникум</div>\n                            <div>Программное обеспечение вычислительной техники и автоматизированных систем <span>•</span> 2007-2011г.</div>\n                            <div>Форма обучения очная, получил квалификацию техник.</div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div className='slide'>\n        <div className='work'>\n                    <div className='work__left-side'>\n                        <div className='work__title'>Работа</div>\n                    </div>\n                    <div className='work__right-side'>\n                        <ul>\n                            <li>\n                                <div>Интернет-агенство Tian Group</div>\n                                <div>Верстальщик</div>\n                                <div>Работаю с марта 2018г. по текущий день</div>\n                            </li>\n                            <li>\n                                <div>Аутсорсинговая компания DigitalWand</div>\n                                <div>Junior Frontend Developer</div>\n                                <div>Работал с апреля 2017г по октябрь 2017.</div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n        </div>\n    </div>\n}","import React from 'react'\n\nexport default function ContactPage(props) {\n    return <div className='container current'>\n        <div className='socials'>\n            <ul>\n                <li>\n                    <a href=\"https://vk.com/id469464422\">\n                        <i className=\"fab fa-vk\"></i>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"https://github.com/Azat74\">\n                        <i className=\"fab fa-github\"></i></a>\n                </li>\n            </ul>\n        </div>\n    </div>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}